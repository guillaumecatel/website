---
import { cva, type VariantProps } from 'class-variance-authority'

import type { HTMLTag, Polymorphic } from 'astro/types'

type Props<Element extends HTMLTag> = Polymorphic<{ as: Element }> &
  VariantProps<typeof button>

const button = cva(
  'inline-flex items-center justify-center overflow-hidden rounded-full text-center font-sans border pointer-events-auto',
  {
    variants: {
      inactive: {
        true: 'line-through',
        false: '',
      },
      uppercase: {
        true: 'uppercase',
        false: '',
      },
      size: {
        sm: 'h-8 px-3 text-sm font-normal',
        md: 'h-12 px-6 text-md font-medium',
      },
      variant: {
        'solid-dark': [
          'border-neutral-950',
          'bg-neutral-950',
          'text-neutral-50',
        ],
        'ghost-dark': [
          'border-neutral-950',
          'bg-transparent',
          'text-neutral-950',
        ],
      },
    },
  },
)

const {
  as: Element = 'button',
  class: className,
  variant = 'solid-dark',
  size = 'md',
  uppercase,
  inactive,
  ...rest
} = Astro.props
---

<Element
  class:list={[button({ variant, size, uppercase, inactive, className })]}
  data-component='Button'
  {...rest}>
  <slot />
</Element>
