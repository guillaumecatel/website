---
import { actions, isInputError } from 'astro:actions'
import { randomUUID } from 'node:crypto'
import Input from './Input.astro'
import Textarea from './Textarea.astro'

const honeypotUUID = randomUUID()
const result = Astro.getActionResult(actions.contact)!
const inputErrors = isInputError(result?.error) ? result.error.fields : {}
---

<form
  id='contact-form'
  class='flex flex-col gap-6 px-3 py-12'
  method='POST'
  action={actions.contact}
  novalidate
  data-component='ContactForm'>
  <Input
    id='contact-form-name'
    label='Your name'
    type='text'
    name='name'
    placeholder='David Hasselhoff'
    errors={inputErrors.name}
    autocomplete='true'
  />

  <Input
    id='contact-form-email'
    label='Your email'
    type='email'
    name='email'
    placeholder='davidhasselhoff@paramount.com'
    errors={inputErrors.email}
    autocomplete='true'
  />

  <Textarea
    id='contact-form-message'
    label='Your message'
    name='message'
    placeholder='Hello, I would like to know more about your services.'
    errors={inputErrors.message}
  />

  <div
    style='position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0;'
    aria-hidden='true'>
    <label for={honeypotUUID}>{honeypotUUID}</label>
    <input type='text' name='hp' id={honeypotUUID} autocomplete='off' />
  </div>

  {
    (
      <span data-part='result' class='text-md pl-3 text-green-700'>
        {result && !result.error && <span>Your email has been sent</span>}
      </span>
    )
  }
  <input type='submit' />
</form>

<!-- <script>
  import { actions, isInputError } from 'astro:actions'

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('#contact-form') as HTMLFormElement
    const resultEl = document.querySelector(
      '[data-part="result"]',
    ) as HTMLSpanElement

    form.addEventListener('submit', async (event) => {
      event.preventDefault()

      const formData = new FormData(form)
      const res = await actions.contact(formData)
      const inputErrors = isInputError(res?.error) ? res.error.fields : {}

      if (res.data) {
        resultEl.innerHTML = `<span>Your email has been sent</span>`
      }

      if (inputErrors) {
        Object.keys(inputErrors).forEach((key) => {
          const errorEl = form.querySelector(
            `#error-contact-form-${key}`,
          ) as HTMLInputElement
          if (errorEl) {
            const errors = inputErrors[key as keyof typeof inputErrors]
            errorEl.innerHTML = Array.isArray(errors)
              ? errors
                  .map(
                    (error) =>
                      `<span class='pl-3 text-sm text-red-500'>${error}</span>`,
                  )
                  .join('')
              : ''
          }
        })

        return
      }
    })
  })
</script> -->
